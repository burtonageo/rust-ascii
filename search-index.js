var searchIndex = {};
searchIndex["ascii"] = {"doc":"A library that provides ASCII-only string and character types, equivalent to the `char`, `str` and\n `String` types in the standard library.","items":[[3,"ToAsciiCharError","ascii","Error returned by `ToAsciiChar`.",null,null],[3,"AsciiStr","","AsciiStr represents a byte or string slice that only contains ASCII characters.",null,null],[3,"AsAsciiStrError","","Error that is returned when a sequence of `u8` are not all ASCII.",null,null],[3,"AsciiString","","A growable string stored as an ASCII encoded buffer.",null,null],[3,"FromAsciiError","","A possible error value when converting an `AsciiString` from a byte vector or string.\nIt wraps an `AsAsciiStrError` which you can get through the `ascii_error()` method.",null,null],[4,"AsciiChar","","An ASCII character. It wraps a `u8`, with the highest bit always zero.",null,null],[13,"Null","","`&#39;\\0&#39;`",0,null],[13,"SOH","","[Start Of Heading](http://en.wikipedia.org/wiki/Start_of_Heading)",0,null],[13,"SOX","","[Start Of teXt](http://en.wikipedia.org/wiki/Start_of_Text)",0,null],[13,"ETX","","[End of TeXt](http://en.wikipedia.org/wiki/End-of-Text_character)",0,null],[13,"EOT","","[End Of Transmission](http://en.wikipedia.org/wiki/End-of-Transmission_character)",0,null],[13,"ENQ","","[Enquiry](http://en.wikipedia.org/wiki/Enquiry_character)",0,null],[13,"ACK","","[Acknowledgement](http://en.wikipedia.org/wiki/Acknowledge_character)",0,null],[13,"Bell","","[bell / alarm / audible](http://en.wikipedia.org/wiki/Bell_character)",0,null],[13,"BackSpace","","[Backspace](http://en.wikipedia.org/wiki/Backspace)",0,null],[13,"Tab","","`&#39;\\t&#39;`",0,null],[13,"LineFeed","","`&#39;\\n&#39;`",0,null],[13,"VT","","[Vertical tab](http://en.wikipedia.org/wiki/Vertical_Tab)",0,null],[13,"FF","","[Form Feed](http://en.wikipedia.org/wiki/Form_Feed)",0,null],[13,"CarriageReturn","","`&#39;\\r&#39;`",0,null],[13,"SI","","[Shift In](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)",0,null],[13,"SO","","[Shift Out](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)",0,null],[13,"DLE","","[Data Link Escape](http://en.wikipedia.org/wiki/Data_Link_Escape)",0,null],[13,"DC1","","[Device control 1, often XON](http://en.wikipedia.org/wiki/Device_Control_1)",0,null],[13,"DC2","","Device control 2",0,null],[13,"DC3","","Device control 3, Often XOFF",0,null],[13,"DC4","","Device control 4",0,null],[13,"NAK","","[Negative AcKnowledgement](http://en.wikipedia.org/wiki/Negative-acknowledge_character)",0,null],[13,"SYN","","[Synchronous idle](http://en.wikipedia.org/wiki/Synchronous_Idle)",0,null],[13,"ETB","","[End of Transmission Block](http://en.wikipedia.org/wiki/End-of-Transmission-Block_character)",0,null],[13,"CAN","","[Cancel](http://en.wikipedia.org/wiki/Cancel_character)",0,null],[13,"EM","","[End of Medium](http://en.wikipedia.org/wiki/End_of_Medium)",0,null],[13,"SUB","","[Substitute](http://en.wikipedia.org/wiki/Substitute_character)",0,null],[13,"ESC","","[Escape](http://en.wikipedia.org/wiki/Escape_character)",0,null],[13,"FS","","[File Separator](http://en.wikipedia.org/wiki/File_separator)",0,null],[13,"GS","","[Group Separator](http://en.wikipedia.org/wiki/Group_separator)",0,null],[13,"RS","","[Record Separator](http://en.wikipedia.org/wiki/Record_separator)",0,null],[13,"US","","[Unit Separator](http://en.wikipedia.org/wiki/Unit_separator)",0,null],[13,"Space","","`&#39; &#39;`",0,null],[13,"Exclamation","","`&#39;!&#39;`",0,null],[13,"Quotation","","`&#39;&quot;&#39;`",0,null],[13,"Hash","","`&#39;#&#39;`",0,null],[13,"Dollar","","`&#39;$&#39;`",0,null],[13,"Percent","","`&#39;%&#39;`",0,null],[13,"Ampersand","","`&#39;&amp;&#39;`",0,null],[13,"Apostrophe","","`&#39;\\&#39;&#39;`",0,null],[13,"ParenOpen","","`&#39;(&#39;`",0,null],[13,"ParenClose","","`&#39;)&#39;`",0,null],[13,"Asterisk","","`&#39;*&#39;`",0,null],[13,"Plus","","`&#39;+&#39;`",0,null],[13,"Comma","","`&#39;,&#39;`",0,null],[13,"Minus","","`&#39;-&#39;`",0,null],[13,"Dot","","`&#39;.&#39;`",0,null],[13,"Slash","","`&#39;/&#39;`",0,null],[13,"_0","","`&#39;0&#39;`",0,null],[13,"_1","","`&#39;1&#39;`",0,null],[13,"_2","","`&#39;2&#39;`",0,null],[13,"_3","","`&#39;3&#39;`",0,null],[13,"_4","","`&#39;4&#39;`",0,null],[13,"_5","","`&#39;5&#39;`",0,null],[13,"_6","","`&#39;6&#39;`",0,null],[13,"_7","","`&#39;7&#39;`",0,null],[13,"_8","","`&#39;8&#39;`",0,null],[13,"_9","","`&#39;9&#39;`",0,null],[13,"Colon","","`&#39;:&#39;`",0,null],[13,"Semicolon","","`&#39;;&#39;`",0,null],[13,"LessThan","","`&#39;&lt;&#39;`",0,null],[13,"Equal","","`&#39;=&#39;`",0,null],[13,"GreaterThan","","`&#39;&gt;&#39;`",0,null],[13,"Question","","`&#39;?&#39;`",0,null],[13,"At","","`&#39;@&#39;`",0,null],[13,"A","","`&#39;A&#39;`",0,null],[13,"B","","`&#39;B&#39;`",0,null],[13,"C","","`&#39;C&#39;`",0,null],[13,"D","","`&#39;D&#39;`",0,null],[13,"E","","`&#39;E&#39;`",0,null],[13,"F","","`&#39;F&#39;`",0,null],[13,"G","","`&#39;G&#39;`",0,null],[13,"H","","`&#39;H&#39;`",0,null],[13,"I","","`&#39;I&#39;`",0,null],[13,"J","","`&#39;J&#39;`",0,null],[13,"K","","`&#39;K&#39;`",0,null],[13,"L","","`&#39;L&#39;`",0,null],[13,"M","","`&#39;M&#39;`",0,null],[13,"N","","`&#39;N&#39;`",0,null],[13,"O","","`&#39;O&#39;`",0,null],[13,"P","","`&#39;P&#39;`",0,null],[13,"Q","","`&#39;Q&#39;`",0,null],[13,"R","","`&#39;R&#39;`",0,null],[13,"S","","`&#39;S&#39;`",0,null],[13,"T","","`&#39;T&#39;`",0,null],[13,"U","","`&#39;U&#39;`",0,null],[13,"V","","`&#39;V&#39;`",0,null],[13,"W","","`&#39;W&#39;`",0,null],[13,"X","","`&#39;X&#39;`",0,null],[13,"Y","","`&#39;Y&#39;`",0,null],[13,"Z","","`&#39;Z&#39;`",0,null],[13,"BracketOpen","","`&#39;[&#39;`",0,null],[13,"BackSlash","","`&#39;\\&#39;`",0,null],[13,"BracketClose","","`&#39;]&#39;`",0,null],[13,"Caret","","`&#39;_&#39;`",0,null],[13,"UnderScore","","`&#39;_&#39;`",0,null],[13,"Grave","","`&#39;`&#39;`",0,null],[13,"a","","`&#39;a&#39;`",0,null],[13,"b","","`&#39;b&#39;`",0,null],[13,"c","","`&#39;c&#39;`",0,null],[13,"d","","`&#39;d&#39;`",0,null],[13,"e","","`&#39;e&#39;`",0,null],[13,"f","","`&#39;f&#39;`",0,null],[13,"g","","`&#39;g&#39;`",0,null],[13,"h","","`&#39;h&#39;`",0,null],[13,"i","","`&#39;i&#39;`",0,null],[13,"j","","`&#39;j&#39;`",0,null],[13,"k","","`&#39;k&#39;`",0,null],[13,"l","","`&#39;l&#39;`",0,null],[13,"m","","`&#39;m&#39;`",0,null],[13,"n","","`&#39;n&#39;`",0,null],[13,"o","","`&#39;o&#39;`",0,null],[13,"p","","`&#39;p&#39;`",0,null],[13,"q","","`&#39;q&#39;`",0,null],[13,"r","","`&#39;r&#39;`",0,null],[13,"s","","`&#39;s&#39;`",0,null],[13,"t","","`&#39;t&#39;`",0,null],[13,"u","","`&#39;u&#39;`",0,null],[13,"v","","`&#39;v&#39;`",0,null],[13,"w","","`&#39;w&#39;`",0,null],[13,"x","","`&#39;x&#39;`",0,null],[13,"y","","`&#39;y&#39;`",0,null],[13,"z","","`&#39;z&#39;`",0,null],[13,"CurlyBraceOpen","","`&#39;{&#39;`",0,null],[13,"VerticalBar","","`&#39;|&#39;`",0,null],[13,"CurlyBraceClose","","`&#39;}&#39;`",0,null],[13,"Tilde","","`&#39;~&#39;`",0,null],[13,"DEL","","[Delete](http://en.wikipedia.org/wiki/Delete_character)",0,null],[5,"caret_encode","","Terminals use [caret notation](https://en.wikipedia.org/wiki/Caret_notation)\nto display some typed control codes, such as ^D for EOT and ^Z for SUB.",null,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[5,"caret_decode","","Returns the control code represented by a [caret notation](https://en.wikipedia.org/wiki/Caret_notation)\nletter, or `None` if the letter is not used in caret notation.",null,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"from","","Constructs an ASCII character from a `u8`, `char` or other character type.",0,{"inputs":[{"name":"c"}],"output":{"name":"result"}}],[11,"from_unchecked","","Constructs an ASCII character from a `char` or `u8` without any checks.",0,{"inputs":[{"name":"c"}],"output":{"name":"self"}}],[11,"as_byte","","Converts an ASCII character into a `u8`.",0,null],[11,"as_char","","Converts an ASCII character into a `char`.",0,null],[11,"is_alphabetic","","Check if the character is a letter (a-z, A-Z)",0,null],[11,"is_digit","","Check if the character is a number (0-9)",0,null],[11,"is_alphanumeric","","Check if the character is a letter or number",0,null],[11,"is_blank","","Check if the character is a space or horizontal tab",0,null],[11,"is_whitespace","","Check if the character is a &#39; &#39;, &#39;\\t&#39;, &#39;\\n&#39; or &#39;\\r&#39;",0,null],[11,"is_control","","Check if the character is a control character",0,null],[11,"is_graph","","Checks if the character is printable (except space)",0,null],[11,"is_print","","Checks if the character is printable (including space)",0,null],[11,"is_lowercase","","Checks if the character is alphabetic and lowercase",0,null],[11,"is_uppercase","","Checks if the character is alphabetic and uppercase",0,null],[11,"is_punctuation","","Checks if the character is punctuation",0,null],[11,"is_hex","","Checks if the character is a valid hex digit",0,null],[11,"as_printable_char","","Unicode has printable versions of the ASCII control codes, like &#39;‚êõ&#39;.",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"is_ascii","","",0,null],[11,"to_ascii_uppercase","","",0,null],[11,"to_ascii_lowercase","","",0,null],[11,"eq_ignore_ascii_case","","",0,null],[11,"make_ascii_uppercase","","",0,null],[11,"make_ascii_lowercase","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"to_ascii_char","","",0,null],[11,"to_ascii_char_unchecked","","",0,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"cmp","","",2,null],[11,"hash","","",2,null],[11,"new","","Coerces into an `AsciiStr` slice.",2,{"inputs":[{"name":"s"}],"output":{"name":"asciistr"}}],[11,"as_str","","Converts `&amp;self` to a `&amp;str` slice.",2,null],[11,"as_bytes","","Converts `&amp;self` into a byte slice.",2,null],[11,"as_slice","","Returns the entire string as slice of `AsciiChar`s.",2,null],[11,"as_mut_slice","","Returns the entire string as mutable slice of `AsciiChar`s.",2,null],[11,"as_ptr","","Returns a raw pointer to the `AsciiStr`&#39;s buffer.",2,null],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the `AsciiStr`&#39;s buffer.",2,null],[11,"to_ascii_string","","Copies the content of this `AsciiStr` into an owned `AsciiString`.",2,null],[11,"from_ascii","","Converts anything that can represent a byte slice into an `AsciiStr`.",2,{"inputs":[{"name":"b"}],"output":{"name":"result"}}],[11,"from_ascii_unchecked","","Converts anything that can be represented as a byte slice to an `AsciiStr` without checking\nfor non-ASCII characters..",2,{"inputs":[{"name":"b"}],"output":{"name":"asciistr"}}],[11,"len","","Returns the number of characters / bytes in this ASCII sequence.",2,null],[11,"is_empty","","Returns true if the ASCII slice contains zero bytes.",2,null],[11,"trim","","Returns an ASCII string slice with leading and trailing whitespace removed.",2,null],[11,"trim_left","","Returns an ASCII string slice with leading whitespace removed.",2,null],[11,"trim_right","","Returns an ASCII string slice with trailing whitespace removed.",2,null],[11,"eq","","",2,null],[11,"to_owned","","",2,null],[11,"as_ref","","",2,null],[11,"as_ref","","",2,null],[11,"as_ref","","",2,null],[11,"as_mut","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"is_ascii","","",2,null],[11,"to_ascii_uppercase","","",2,null],[11,"to_ascii_lowercase","","",2,null],[11,"eq_ignore_ascii_case","","",2,null],[11,"make_ascii_uppercase","","",2,null],[11,"make_ascii_lowercase","","",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"valid_up_to","","Returns the index of the first non-ASCII byte.",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"as_ascii_str","","",2,null],[11,"as_ascii_str_unchecked","","",2,null],[11,"as_mut_ascii_str","","",2,null],[11,"as_mut_ascii_str_unchecked","","",2,null],[11,"clone","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"asciistring"}}],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"hash","","",4,null],[11,"new","","Creates a new, empty ASCII string buffer without allocating.",4,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates a new ASCII string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without reallocating.\nIf `capacity` is 0, the ASCII string will not allocate.",4,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_raw_parts","","Creates a new `AsciiString` from a length, capacity and pointer.",4,null],[11,"from_ascii_unchecked","","Converts a vector of bytes to an `AsciiString` without checking for non-ASCII characters.",4,{"inputs":[{"name":"b"}],"output":{"name":"self"}}],[11,"from_ascii","","Converts anything that can represent a byte buffer into an `AsciiString`.",4,{"inputs":[{"name":"b"}],"output":{"name":"result"}}],[11,"push_str","","Pushes the given ASCII string onto this ASCII string buffer.",4,null],[11,"capacity","","Returns the number of bytes that this ASCII string buffer can hold without reallocating.",4,null],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted in the given\n`AsciiString`. The collection may reserve more space to avoid frequent reallocations.",4,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be inserted in the\ngiven `AsciiString`. Does nothing if the capacity is already sufficient.",4,null],[11,"shrink_to_fit","","Shrinks the capacity of this ASCII string buffer to match it&#39;s length.",4,null],[11,"push","","Adds the given ASCII character to the end of the ASCII string.",4,null],[11,"truncate","","Shortens a ASCII string to the specified length.",4,null],[11,"pop","","Removes the last character from the ASCII string buffer and returns it.\nReturns `None` if this string buffer is empty.",4,null],[11,"remove","","Removes the ASCII character at position `idx` from the buffer and returns it.",4,null],[11,"insert","","Inserts an ASCII character into the buffer at position `idx`.",4,null],[11,"len","","Returns the number of bytes in this ASCII string.",4,null],[11,"is_empty","","Returns true if the ASCII string contains zero bytes.",4,null],[11,"clear","","Truncates the ASCII string, setting length (but not capacity) to zero.",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"borrow","","",4,null],[11,"from","","",4,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",4,null],[11,"into","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"asciistring"}}],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"asciistring"}}],[11,"extend","","",4,null],[11,"extend","","",4,null],[11,"extend","","",4,null],[11,"add","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"ascii_error","","Get the position of the first non-ASCII byte or character.",5,null],[11,"into_source","","Get back the original, unmodified type.",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"cause","","Always returns an `AsAsciiStrError`",5,null],[11,"into_ascii_string_unchecked","","",4,null],[11,"into_ascii_string","","",4,null],[8,"ToAsciiChar","","Convert `char`, `u8` and other character types to `AsciiChar`.",null,null],[10,"to_ascii_char_unchecked","","Convert to `AsciiChar` without checking that it is an ASCII character.",6,null],[10,"to_ascii_char","","Convert to `AsciiChar`.",6,null],[8,"AsAsciiStr","","Convert slices of bytes to `AsciiStr`.",null,null],[10,"as_ascii_str_unchecked","","Convert to an ASCII slice without checking for non-ASCII characters.",7,null],[10,"as_ascii_str","","Convert to an ASCII slice.",7,null],[8,"AsMutAsciiStr","","Convert mutable slices of bytes to `AsciiStr`.",null,null],[10,"as_mut_ascii_str_unchecked","","Convert to a mutable ASCII slice without checking for non-ASCII characters.",8,null],[10,"as_mut_ascii_str","","Convert to a mutable ASCII slice.",8,null],[8,"IntoAsciiString","","Convert vectors into `AsciiString`.",null,null],[10,"into_ascii_string_unchecked","","Convert to `AsciiString` without checking for non-ASCII characters.",9,null],[10,"into_ascii_string","","Convert to `AsciiString`.",9,null]],"paths":[[4,"AsciiChar"],[3,"ToAsciiCharError"],[3,"AsciiStr"],[3,"AsAsciiStrError"],[3,"AsciiString"],[3,"FromAsciiError"],[8,"ToAsciiChar"],[8,"AsAsciiStr"],[8,"AsMutAsciiStr"],[8,"IntoAsciiString"]]};
initSearch(searchIndex);
